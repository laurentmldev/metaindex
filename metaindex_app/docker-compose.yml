version: '3'


#
# Lines ending with '### DEBUG' are commented in/out by metaindex.sh script depending on provided DEBUG flag.
#
# This is mainly to allow an external instance of mxwebapp (typically running under DEBUG mode in Eclipse)
# to connect to other Docker containers (mxmysql,mxelsrc,mxkibana).
#

networks:
 mxnet:

services:
 mxmysql:
   #build: ./mysql
   image: mysql:8
   container_name: mxmysql
   command: --default-authentication-plugin=mysql_native_password
   networks:
     - mxnet
   cap_add:
      - SYS_NICE  # CAP_SYS_NICE
   environment:
    - MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
    #- MYSQL_RANDOM_ROOT_PASSWORD=true
    #- MYSQL_ALLOW_EMPTY_PASSWORD=true
    - MYSQL_DATABASE=metaindex
    - MYSQL_LOG_CONSOLE=true    
    - MYSQL_USER=$MYSQL_USER
    - MYSQL_PASSWORD=$MYSQL_PASSWORD
   volumes:
        - mxmysql-data:/var/lib/mysql
        - ./mxmysql/1-dbreset.sql:/docker-entrypoint-initdb.d/1-dbreset.sql
        - ./mxmysql/2-create-dbentries-common.sql:/docker-entrypoint-initdb.d/2-create-dbentries-common.sql       
        - ./mxmysql/3-create-dbentries-$RUNMODE.sql:/docker-entrypoint-initdb.d/3-create-dbentries-$RUNMODE.sql       
        - ./mxmysql/my.cnf:/etc/mysql/my.cnf
        - ./tools/mx_tools_commons.sh:/opt/mxtools/mx_tools_commons.sh
        - ./tools/mxmysql:/opt/mxtools/mxmysql
        - mxmysql-backups:/root/mxmaintenance/backups
   expose:
      - $MYSQLPORT      
   ports: ### DEBUG
      - $MYSQLPORT:$MYSQLPORT ### DEBUG
 mxpma:
     image: phpmyadmin/phpmyadmin
     container_name: mxpma
     environment:   
     # Values hardcoded in metaindex/WEB-INF/applicationContext.xml   
      - PMA_HOST=mxmysql 
      - PMA_PORT=$MYSQLPORT
      - PMA_ABSOLUTE_URI=https://$MX_PUBLIC_HOSTNAME/metaindex/pma
     networks:
      - mxnet
     restart: always
     expose:
      - 80
     links:
      - mxmysql   
     depends_on:
      - mxmysql

 mxelsrc:
     image: docker.elastic.co/elasticsearch/elasticsearch:$ELK_VERSION
     container_name: mxelsrc
     environment:
      - node.name=mxelsrc
      - discovery.seed_hosts=mxelsrc
      - cluster.initial_master_nodes=mxelsrc
      #- bootstrap.memory_lock=true
      #-Dbootstrap.mlockall=true  
      #-Des.enforce.bootstrap.checks=true -Des.transport.cname_in_publish_address=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "ELASTIC_PASSWORD=$ELK_ELASTIC_PASSWORD"              
     ulimits:
       memlock:
        soft: -1
        hard: -1
     networks:
      - mxnet
     command: >
      bash -c '
        /opt/mxtools/mxelsrc/mxelsrc_init.sh $ELK_METAINDEX_PASSWD $ELK_KIBANA_PASSWORD $ELK_ELASTIC_PASSWORD &
        /usr/local/bin/docker-entrypoint.sh
              
      '
     expose:
      - $ELASTICSEARCH_PORT1
      - $ELASTICSEARCH_PORT2     
     ports: ### DEBUG
      - $ELASTICSEARCH_PORT1:$ELASTICSEARCH_PORT1 ### DEBUG
      - $ELASTICSEARCH_PORT2:$ELASTICSEARCH_PORT2 ### DEBUG
     volumes:
       - mxelsrc-data:/usr/share/elasticsearch/data
       - mxelsrc-config:/usr/share/elasticsearch/config
       - mxelsrc-logs:/usr/share/elasticsearch/logs
       # volume defined as path.repo in elasticsearch.yml config file
       - mxelsrc-backups:/usr/share/mxelsrc/backups/mx_backups_folder/
       - ./mxelsrc/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
       - ./tools/mx_tools_commons.sh:/opt/mxtools/mx_tools_commons.sh
       - ./tools/mxelsrc:/opt/mxtools/mxelsrc
       # for SSL certificates
       #- $MX_HTTPS_KEYFILE:/usr/share/elasticsearch/config/elasticsearch.mxssl.keystore

 mxkibana:
    image: docker.elastic.co/kibana/kibana:$ELK_VERSION
    container_name: mxkibana    
    environment:
      - SERVER_BASEPATH=
      - SERVER_PUBLICBASEURL=
    links:
      - mxelsrc
    expose:
      - $KIBANA_PORT
    ports: ### DEBUG
       - $KIBANA_PORT:$KIBANA_PORT ### DEBUG
    depends_on:
      - mxelsrc
    volumes:
       - ./mxkibana/kibana.$RUNMODE.yml:/usr/share/kibana/config/kibana.yml
    networks:
      - mxnet    


 mxwebapp:
    image: tomcat:9-jdk15
    container_name: mxwebapp
    links:
      - mxmysql
      - mxelsrc
      - mxkibana    
    environment:      
     # hostname from public domain, not from container
      - mx.host=$MX_PUBLIC_HOSTNAME
      - mx.protocol=https
      - mx.port=$HTTPS_PORT
      - mx.appname=webapp
      - mx.runmode=$RUNMODE      
      - mx.footer.info=Production Env.
      - mx.userdata.path=$MX_USERDATA_PATH
      - mx.statistics.update_period_sec=$MX_STATISTICS_UPDATEPERIOD_SEC
      - mx.drive.sftp.port=$MX_PUBLIC_PORT_DRIVE_SFTP      
      - mx.ssl.keystore.file=$MX_TARGET_KEYSTORE_FILE
      - mx.ssl.keystore.password=$MX_TARGET_KEYSTORE_PASSWORD
      - JAVA_OPTS="-Dmx.ssl.keystore.file=$MX_TARGET_KEYSTORE_FILE -Dmx.ssl.keystore.password=$MX_TARGET_KEYSTORE_PASSWORD -Dfile.encoding=UTF-8 "

      # hostname from public domain, not from container
      - mx.kibana.host=$KIBANA_PUBLIC_HOSTNAME
      - mx.kibana.protocol=https
      - mx.kibana.port=$HTTPS_PORT
      # hostname from internal access form webapp to Kibana REST API
      - mx.kibana.api.host=mxkibana
      - mx.kibana.api.protocol=http
      - mx.kibana.api.port=$KIBANA_PORT

      # hostname within Docker container
      - mx.elk.host=mxelsrc
      - mx.elk.protocol=http
      - mx.elk.port1=$ELASTICSEARCH_PORT1
      - mx.elk.port2=$ELASTICSEARCH_PORT2
      - mx.elk.user=metaindex
      - mx.elk.passwd=$ELK_METAINDEX_PASSWD

      # hostname from within Docker container 
      - mx.sql.host=mxmysql
      - mx.sql.port=$MYSQLPORT
      - mx.sql.dbname=metaindex
      - mx.sql.user=$MYSQL_USER
      - mx.sql.password=$MYSQL_PASSWORD

    volumes:
      - ./ssl/mxwebapp.$RUNMODE/metaindex.p12:$MX_TARGET_KEYSTORE_FILE
      - ./mxwebapp/tomcat_conf/server.xml:/usr/local/tomcat/conf/server.xml
      - ./mxwebapp/tomcat_conf/web.$RUNMODE.xml:/usr/local/tomcat/conf/web.xml
      - ./mxwebapp/tomcat_conf/context.xml:/usr/local/tomcat/conf/context.xml
      - ./mxwebapp/metaindex.war:/usr/local/tomcat/webapps/webapp.war
      - ./mxwebapp/redirect_root.$RUNMODE.html:/usr/local/tomcat/webapps/ROOT/index.html
      - ./tools/mx_tools_commons.sh:/opt/mxtools/mx_tools_commons.sh
      - ./tools/mxwebapp:/opt/mxtools/mxwebapp
      - "$MX_USERDATA_HOSTPATH:$MX_USERDATA_PATH"
    expose:
      - $MX_PORT_HTTPS
    ports:
      - $MX_PUBLIC_PORT_DRIVE_SFTP:$MX_PUBLIC_PORT_DRIVE_SFTP
    networks:
      - mxnet

 mxproxy:
    image: httpd:2.4.41-alpine
    container_name: mxproxy
    restart: always
    links:
      - mxpma
      - mxkibana
    environment:
      # hostname from public domain, not from container
      - HTTPD_SSL_CERTIFICATE_FILE=$PROXY_SSL_CERTIFICATE_FILE 
      - HTTPD_SSL_CERTIFICATE_KEYFILE=$PROXY_SSL_CERTIFICATE_KEYFILE 
      - HTTP_PORT=$HTTP_PORT
      - HTTPS_PORT=$HTTPS_PORT
    ports:
      - $HTTP_PORT:80
      - $HTTPS_PORT:443
    volumes:
       - ./mxproxy/httpd.conf:/usr/local/apache2/conf/httpd.conf      
       - ./mxproxy/mxproxy.$RUNMODE.conf:/usr/local/apache2/conf/extra/proxy-html.conf
       - ./mxproxy/htdocs:/usr/local/apache2/htdocs
       - ./ssl/mxproxy.$RUNMODE/metaindex.crt:$PROXY_SSL_CERTIFICATE_FILE
       - ./ssl/mxproxy.$RUNMODE/metaindex.key:$PROXY_SSL_CERTIFICATE_KEYFILE
    networks:
      - mxnet
volumes:
  mxmysql-data:
    external: true
  mxmysql-backups:
    external: true
  mxelsrc-data:
    external: true
  mxelsrc-config:
    external: true
  mxelsrc-logs:
    external: true
  mxelsrc-backups:
    external: true
  
