### ELK Rest API ###

### create index 
curl -XPUT 'http://localhost:9200/myindex?pretty'  --header "content-type: application/JSON"

### delete index 
curl -XDELETE 'http://localhost:9200/myindex?pretty'  --header "content-type: application/JSON"
curl -XDELETE 'http://localhost:9200/*?pretty'  --header "content-type: application/JSON"

### get index details
curl  -XGET http://metaindex.fr:9200/myindex?pretty

### with anthentication
curl -u <user>:<password> -XGET ...

### queries
#### match all
curl  --header "content-type: application/JSON" http://metaindex.fr:9200/myindex/_search?pretty -d '{"query": { "match_all" : {}}}'

#### simple query string
curl  --header "content-type: application/JSON" http://metaindex.fr:9200/myindex/_search?pretty -d '{"query": { "simple_query_string" : { "query": "bla bla bla"   }}}'

#### query string
curl  --header "content-type: application/JSON" http://metaindex.fr:9200/myindex/_search?pretty -d '{"query": { "query_string" : { "query": "name:lolo AND age:>30"   }}}'

### query all (full data)
curl -u <user>:<pwd> -XGET --header "content-type: application/JSON" "http://localhost:9200/<index>/_search?scroll=10m&pretty" -d '{"size":200,"query": { "match_all" : {}}}'

### snapshots
curl -XGET 'http://localhost:9200/_snapshot?pretty'

# declare snapshot location
#folder 'repo.path'/my_test_backup_folder must be chmod 755
curl -XPOST 'http://localhost:9200/_snapshot/my_test_backup?pretty' --header "content-type: application/JSON"  -d '{"type":"fs", "settings": {"location" : "my_test_backup_folder","compress" : true}}'

# create snapshot
curl -XPOST 'http://localhost:9200/_snapshot/my_test_backup/snap1?pretty'
 
# check snapshot status
curl -XGET 'http://localhost:9200/_snapshot/my_test_backup/snap1/_status?pretty'
curl -XGET 'http://localhost:9200/_snapshot/my_test_backup/_all?pretty'

# automatic snapshot name
# PUT /_snapshot/my_backup/<snapshot-{now/d}>
PUT /_snapshot/my_backup/%3Csnapshot-%7Bnow%2Fd%7D%3E 

# delete snapshot
DELETE /_snapshot/my_backup/snapshot_2


#### users and security
### set basic users and passwords
# in elasticsearch host : 
elasticsearch-setup-passwords auto|interactive
bin/elasticsearch-keystore add xpack.security.transport.ssl.keystore.secure_password
bin/elasticsearch-keystore add xpack.security.transport.ssl.truststore.secure_password
bin/elasticsearch-keystore list

# change built-in user password
curl -u elastic:<elasticpwd> -XPOST http://localhost:9200/_security/user/kibana/_password  --header "content-type: application/JSON"  -d '{"password":"<pwd>"}'

# test user
curl -u <user>:<pwd> -XGET http://metaindex.fr:9200/?pretty

# in kibana host
./bin/kibana-keystore create
./bin/kibana-keystore add elasticsearch.username
./bin/kibana-keystore add elasticsearch.password

### KIBANA Rest API ###

# get index info
 curl -u elastic:xxxx -XGET 'http://localhost:5601/api/spaces/space/test_catalog'

# create space
curl -u elastic:xxxx  -H 'kbn-xsrf: true ' -H 'Content-Type: application/json'  -XPOST http://mxkibana:5601/api/spaces/space  -d '{"disabledFeatures":["indexPatterns","apm","dev_tools","infrastructure","ml","advancedSettings","logs","maps","canvas","graph","monitoring","savedObjectsManagement","siem","uptime"],"color":"#444499","initials":"ye","imageUrl":"","name":"Statistics for yeyeye","description":"Perform statistics over contents of catalog yeyeye","id":"yeyeye2"}'
# create role
 curl -u elastic:xxxx  -H 'kbn-xsrf: true ' -H 'Content-Type: application/json'  -XPUT http://localhost:5601/api/security/role/test_role -d '{ "kibana": [ { "feature" : { "dashboard": ["read"] } , "spaces" : []  } ] }'
 
# create index-pattern
curl -u elastic:xxxx  -H 'kbn-xsrf: true ' -H 'Content-Type: application/json'  -XPOST http://localhost:5601/s/lolo/api/saved_objects/index-pattern/mxpattern_lolo -d '{ "attributes": { "title" : "lolo" } }' 
 
ELK rights
----------

Default space :
 - disable all plugins
 
For catalog CatX
* Space "CatX": 
  - enable only discover/visualize/dashboard

* Roles :
  - role CatX_readonly
       - index CatX read
       - spaces privileges CatX : READ for dashboard
  - role CatX_managevisu
  	   - index CatX read
  	   - spaces privileges CatX : ALL for discover/visualize/dashboard

* user myUserRO:
  - CatX_readonly
  - kibana_dashboard_only_user
  
* user myUserWrite | myUserAdmin :
  - role CatX_managevisu
  - kibana_user


